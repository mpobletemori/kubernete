--Ruta de archivos usados en el curso
https://github.com/ricardoandre97/k8s-resources

--Tener instalado previamente docker y kubectl y minube
--Ver status de minikube
minikube status

--Iniciar minikube
minikube start

--Detener minikube
minikube stop

DOCKER_HOST=tcp://localhost:2375
C:\bin
https://dev.to/_nicolas_louis_/how-to-run-docker-on-windows-without-docker-desktop-hik

--version de ubuntu 
lsb_release -a

--Ver lista de mv disponibles
wsl --list --online

--Instalar distribucion especifica
wsl --install --distribution <Distribution Name>
wsl --install --distribution Ubuntu

--Ver lista de mv instaladas
wsl --list --verbose
wsl -l -v

--Ejecutar distribucion 
wsl --distribution <Distribution Name>
wsl --distribution Ubuntu

--Ruta disco C y D desde WSL
/mnt/c
/mnt/d
--Borrar distribucion instalada
wsl --unregister <distro name>

--status de wsl
wsl --status

--detener ejecucion mv wsl
wsl --terminate <Distribution Name>

--Apágar todas las MV y entorno de wsl
wsl --shutdown

--Levantar docker
dockerd


sudo apt-get install curl
sudo apt-get install apt-transport-https


curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
sudo install minikube-linux-amd64 /usr/local/bin/minikube

curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl


--Instalar docker en ubuntu 
sudo apt install apt-transport-https ca-certificates curl software-properties-common

curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -

sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"

sudo apt update

apt-cache policy docker-ce

sudo usermod -aG docker $USER
su - $USER
id -nG

sudo service docker start
sudo service docker stop
docker run hello-world

docker search ubuntu

--instalar minikube https://minikube.sigs.k8s.io/docs/start/
curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
sudo install minikube-linux-amd64 /usr/local/bin/minikube

minikube start
minikube pause
minikube unpause
minikube stop
alias kubectl="minikube kubectl --"
http://127.0.0.1:44909/api/v1/namespaces/kubernetes-dashboard/services/http:kubernetes-dashboard:/proxy/#/workloads?namespace=default

==================
--PODS------------
==================
--ver recursos de k8s
kubectl api-resources

--ver lista de pods 
kubectl get pods

--ver lista de pods con formato yaml (formato como se creó el pod)
kubectl get pods -o yaml

--ver detalle de pod en formato yaml
kubectl get pod <<pod_name>> -o yaml
kubectl get pod podtest -o yaml

--ver detalle de pod filtrarlo por label
kubectl get pods -l <<key1>>=<<value1>> 
kubectl get pods -l app=backend

--obtener ayudar kubectl run
kubectl run --help

--crear pod por comando
kubectl run --generator=run-pod/v1 <<pod_name>> --image=<<imagen_name:version>>
kubectl run --generator=run-pod/v1 podtest --image=nginx:alpine
kubectl run <<pod_name>> --image=<<imagen_name:version>>
kubectl run podtest --image=nginx:alpine

--ver log de pod mientras se crea
kubectl describe --help
kubectl describe <<pod_name>>
kubectl describe pod/<<pod_name>>

--borrar pod en K8S
kubectl delete pod <<pod_name1>> <<pod_name2>> ...<<pod_name3>>

--En caso no se vea un pod
Si creaste tu cluster con algún driver como VirtualBox o HyperV, quizás no puedas 
ver la IP del pod debido a que se encuentran en una máquina distinta a tu localhost, 
por tanto no tienes acceso a estas IPs locales.

Para solucioarlo, puedes ejecutar este comando:

kubectl port-forward <pod-name> 7000:<pod-port>

Luego, solo vas a http://localhost:7000 y deberías ver tu pod!

--Ingresar a consola de pod
kubectl exec -it <<pod_name>> -- sh
kubectl exec -it podtest -- sh

--Ingresar a consola a contenedor de pod
kubectl exec -it <<pod_name>> -c <<container_name>> -- sh
kubectl exec -it doscont -c cont1 -- sh

--Ver logs de un pod
kubectl logs <<pod_name>>
kubectl logs podtest

--Ver logs de un pod en modo interactivo (para revisar por que no funciona un pod)
kubectl logs <<pod_name>> -f
kubectl logs podtest -f

--Ver log de contenedor dentro de pod
kubectl logs <<pod_name>> <<container_name>>
kubectl logs doscont cont1

--Ver log de contenedor dentro de pod en modo interactivo
kubectl logs -f <<pod_name>> <<container_name>>
kubectl logs -f doscont cont1

--Manifiestos en k8s 
-Se detalle todo lo que se requiere para levantar un pod
-Obtener version de servicios de k8s que ira en tag apiVersion
kubectl api-versions

-Obtener componente ira en tag Kind
kubectl api-resources | grep "Pod"

-Levantar un pod mediante fichero yaml
kubectl apply -f <<nombre_fichero>>
kubectl apply -f pod.yaml

--Borrar pod declarado en fichero yaml
kubectl delete -f <<nombre_fichero>>
kubectl delete -f pod.yaml

--Probar python docker 
docker run --net host -it python:3.6-alpine sh
-Dentro de sh del contenedor docker hacer lo siguiente:
python -m http.server 8081
-Acceder a localhost:8081 por navegador (mostrara una pagina con filesystem)
-instalar curl dentro de pod
apk add -U curl

--Ver lista de replicaSet
kubectl get rs 

--Ver detalle de replicaSet
kubectl describe rs <<nombre_replicaSet>>

--Ver detalle de replicaSet en formato yaml
kubectl describe rs <<nombre_replicaSet>> -o yaml

--Ver lista de deployment
kubectl get deployment

--Ver lista de deployment y sus labels
kubectl get deployment --show-labels

--Ver detalle de deployment
kubectl describe deployment <<nombre_deployment>>

--Ver detalle de deployment en formato yaml
kubectl describe deployment <<nombre_deployment>> -o yaml

--Ver el status de un deployment
kubectl rollout status deployment <<nombre_deployment>>

--Ver historico de deployments
kubectl rollout history deployment <<nombre_deployment>>







